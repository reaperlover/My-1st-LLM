#系统为unbuntu 24.04 LTS

sudo apt update && sudo apt upgrade -y
sudo apt install -y git curl unzip python3-pip python3-venv
#更新系统并安装基础工具

sudo adduser zjxadmin
sudo usermod -aG sudo zjxadmin
#创建专用用户

su - zjxadmin
#切换用户

sudo fallocate -l 4G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
#配置Swap空间（防止OOM), swap空间即在内存可能不够用时，将硬盘空间与内存空间做交换，虽然磁盘读写速度比内存慢1000倍，但是会防止内存过载，导致进程崩溃。因为我的当前设备的内存为8GB，估算各个服务峰值可能消耗12GB内存。可使用free -h查看swap空间使用

mkdir ~/knowledge-env && cd ~/knowledge-env
python3 -m venv knowledge-env
source knowledge-env/bin/activate
# 创建专用目录

pip install --upgrade pip
pip install langchain-core==0.3.54 faiss-cpu==1.10.0 sentence-transformers==4.1.0 pypdf==5.4.0 fastapi
#安装最小化依赖（内存优化版）

mkdir -p ~/knowledge-env/data/manuals
#通过SFTP/scp将PDF/Word等手册上传到此目录，作为知识库

##########创建Python脚本，执行后可自动构建知识库##########
from langchain_community.document_loaders import DirectoryLoader
from langchain_text_splitters import RecursiveCharacterTextSplitter
from langchain_community.embeddings import HuggingFaceEmbeddings
from langchain_community.vectorstores import FAISS
import os

# 1. 加载文档
loader = DirectoryLoader(
    os.path.expanduser("~/knowledge-base/manuals"),
    glob="**/*.pdf",
    show_progress=True
)
docs = loader.load()

# 2. 分割文本
splitter = RecursiveCharacterTextSplitter(
    chunk_size=1000,
    chunk_overlap=200
)
splits = splitter.split_documents(docs)

# 3. 生成向量库
embeddings = HuggingFaceEmbeddings(model_name="shibing624/text2vec-base-chinese")
vectorstore = FAISS.from_documents(splits, embeddings)
vectorstore.save_local("knowledge_db")
print("知识库构建完成！保存到 knowledge_db/ 目录")
######################################################

